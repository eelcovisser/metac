module variables

language MetaC

test variable usage [[
  int32 [[x]] = 1;
  int32 y = [[x]] + 1;
]] resolve #2 to #1

test double definition of a variable [[
  int32 f() {
    int32 a;
    int32 a;
  }
]] /Duplicate/

test parens decl [[
  int32 (*[[a]]);
  int32 *b = [[a]];
]] resolve #2 to #1

test array field decl [[
  int32 [[a]][];
  int32 b[] = [[a]];
]] resolve #2 to #1

test multiple vars [[
  int32 a, b, [[c]];
  int32 d = [[c]];
]] resolve #2 to #1

test define type modifiers [[
  volatile const int32 a;
]] run test-utils-get-modifiers to Modifiers([Volatile, Const])

test define storage modifiers [[
  extern static int32 a;
]] run test-utils-get-storage to Storage([Extern, Static])

test refer to variable [[
  int [[a]];
  void f() { [[a]]; }
]] resolve #2 to #1

test refer to parameter [[
  void f(int [[a]]) { [[a]]; }
]] resolve #2 to #1

test refer to function [[
  void [[f]]() { [[f]](); }
]] resolve #2 to #1

test refer to enum [[
  enum { [[a]] };
  void f() { [[a]]; }
]] resolve #2 to #1

test refer to define [[
  #define [[FOO]] 4
  void f() { [[FOO]]; }
]] resolve #2 to #1

test get define value [[
  #define FOO 4
  void f() { [[FOO]]; }
]] run get-value to Integer("4"){_}
